# Telemetry configuration
telemetry:
  # URL configuration - api key also goes here for updating monitors
    secretName: "cronitor-secret"

# OpenAI-compatible endpoints to monitor
# Add your endpoints here or use values overrides
# Valid model types are 'chat' and 'embedding'. 
# Chat requests receive a single message containing 'test', with 1 output token requested. 
# Embedding models receive a single message containing 'test'.
endpoints: []
  # Example:
  # - name: "onwards-service"
  #   url: "http://onwards-service"
  #   models: 
  #     - name: "embed"
  #       type: "embedding"
  #       monitor: "my-embedding-model"  # Optional: cronitor monitor name
  #     - name: "generate"
  #       type: "chat"
  #       monitor: "my-chat-model"  # Optional: cronitor monitor name
  #       monitorGroup: "group1" # Optional: group for monitor to go in
  #       schedule: "*/5 * * * *" # Optional: displays the schedule on the frontend
  #       consecutiveFailures: 1 # Optional: how many failed pings are needed to trigger an alert.
  #       consecutiveMissing: 1 # Optional: how many missing pings are needed to trigger an alert.
  #       minFreqRequiredMins: 60

# minFreqRequiredMins catches inactive alerts - if an alert starts but never completes, it'll be marked as inactive by
# Cronitor. To force this into raising an alert, we require a successful ping once per any minFreqRequiredMins period.

# CronJob configuration
cronJob:
  # Schedule for all monitoring jobs (every 5 minutes)
  schedule: "*/5 * * * *"
  
  # Container image
  image:
    repository: ghcr.io/doublewordai/model-monitor/ai-vitals
    tag: ""
    pullPolicy: "IfNotPresent"
  
  # Job settings: if this is not never
  restartPolicy: "Never"
  
  # Resource limits/requests
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi

  
# Kubernetes metadata
nameOverride: ""
fullnameOverride: ""

# Common labels
commonLabels:
  app.kubernetes.io/name: model-monitor
  app.kubernetes.io/instance: model-monitor
