{{- range $endpoint := .Values.endpoints }}
{{- range $model := $endpoint.models }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "openai-monitor.fullname" $ }}-{{ $endpoint.name }}-{{ $model.name }}
  labels:
    {{- include "openai-monitor.labels" $ | nindent 4 }}
    endpoint: {{ $endpoint.name }}
    model: {{ $model.name }}
spec:
  schedule: {{ $.Values.cronJob.schedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "openai-monitor.selectorLabels" $ | nindent 12 }}
            endpoint: {{ $endpoint.name }}
            model: {{ $model.name }}
        spec:
          containers:
          - name: monitor
            image: {{ $.Values.cronJob.image.repository }}:{{ $.Values.cronJob.image.tag }}
            imagePullPolicy: {{ $.Values.cronJob.image.pullPolicy }}
            command:
            - /bin/sh
            - -c
            - |
              START_TIME=$(date +%s)
              {{- if eq $model.type "chat" }}
              RESPONSE=$(curl -s -w "%{http_code}" -X POST "$SERVER_URL/v1/chat/completions" \
                -H "Content-Type: application/json" \
                -d '{"model":"{{ $model.name }}","messages":[{"role":"user","content":"test"}],"max_tokens":1}')
              {{- else if eq $model.type "embedding" }}
              RESPONSE=$(curl -s -w "%{http_code}" -X POST "$SERVER_URL/v1/embeddings" \
                -H "Content-Type: application/json" \
                -d '{"model":"{{ $model.name }}","input":"test"}')
              {{- end }}
              HTTP_CODE=$(echo "$RESPONSE" | tail -c 4)
              BODY=$(echo "$RESPONSE" | head -c -4)
              END_TIME=$(date +%s)
              DURATION=$((END_TIME - START_TIME))
              echo "Response body: $BODY"
              if [ "$HTTP_CODE" = "200" ]; then
                curl -s "$CRONITOR_BASE_URL/$MONITOR_NAME?duration=${DURATION}s&status=complete" > /dev/null
                echo "SUCCESS: {{ $endpoint.name }}/{{ $model.name }} responded in ${DURATION}s"
              else
                curl -s "$CRONITOR_BASE_URL/$MONITOR_NAME?duration=${DURATION}s&status=fail" > /dev/null
                echo "FAILURE: {{ $endpoint.name }}/{{ $model.name }} failed with HTTP $HTTP_CODE in ${DURATION}s"
                exit 1
              fi
            env:
            - name: SERVER_URL
              value: {{ $endpoint.url | quote }}
            - name: CRONITOR_BASE_URL
              {{- toYaml $.Values.telemetry.url | nindent 14 }}
            - name: MONITOR_NAME
              value: {{ $model.monitor | default (printf "%s-%s" $endpoint.name $model.name) | quote }}
            {{- with $.Values.cronJob.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          restartPolicy: {{ $.Values.cronJob.restartPolicy }}
{{- end }}
{{- end }}